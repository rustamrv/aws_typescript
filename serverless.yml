  service: aws-typescript
  frameworkVersion: "3"

  provider:
    name: aws
    runtime: nodejs18.x
    stage: ${opt:stage, 'dev'} 
    region: us-east-1
      
    iamRoleStatements:
      - Effect: "Allow"
        Resource: "*"
        Action:
          - "sns:*"
    environment:
      accountId: '#{AWS::AccountId}'

  plugins:
    - serverless-plugin-typescript
    - serverless-offline

  package:
    exclude:
      - node_modules/**/*
    include:
      src/handler.ts

  functions:
    register:
      handler: src/handler.register
      events:
        - http:
            path: /auth/register
            method: POST
            onSuccess: sendVerifyAccount

  sendVerifyAccount:
    handler: src/handler.sendVerifyAccount
    events:
      - sns: sendVerifyAccount

  resources: 
    Conditions:
      ShouldCreateResources: !Equals [!Ref SendVerifyTopic, !Sub "arn:aws:sns:us-east-1:${AWS::AccountId}:sendVerifyAccount"]
      
    Resources:
      SendVerifyTopic:
        Type: AWS::SNS::Topic 
        Condition: ShouldCreateResources
        Properties:
          DisplayName: VerifyAccount
          TopicName: sendVerifyAccount

      SendVerifyQueue:
        Type: AWS::SQS::Queue
        Condition: ShouldCreateResources
        Properties:
          QueueName: my-sqs-queue

      VerifyTopicSubscription:
        Type: AWS::SNS::Subscription
        Condition: ShouldCreateResources
        Properties:
          Protocol: sqs
          TopicArn: !Ref SendVerifyTopic
          Endpoint:
            Fn::GetAtt: [SendVerifyQueue, Arn]
